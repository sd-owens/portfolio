<%- include('./partials/header.ejs') %> 

<div class="text-center my-3">
    <h3>My Projects</h3>
</div>


<div class="row text-center">
    <!-- card1 -->
    <div class="col-lg-4 col-md-6 mb-3">
        <div class="card" style="width: 18rem;">
            <img src="images/r4r_thumb.png" class="card-img-top" alt="...">
            <div class="card-body">
            <h5 class="card-title">Row For Reveille</h5>
            <p id="scrollbox" class="card-text">
                Designed and implemented a mobile-first dynamic website in support of charity fundraiser for Project Reveille. Built on NodeJS with Express as the back-end framework. Deployed via Heroku.</p>
            </div>
            <div class="card-body">
            <a target="_blank" href="https://github.com/sd-owens/Row4Reveille" class="card-link">GitHub</a>
            <a target="_blank" href="https://www.rowforreveille.com/" class="card-link">Website</a>
            </div>
        </div>
    </div>
    <!-- card2 -->
    <div class="col-lg-4 col-md-6 mb-3">
        <div class="card" style="width: 18rem;">
            <img src="images/SoulExchange_thumb.png" class="card-img-top" alt="...">
            <div class="card-body">
            <h5 class="card-title">Soul Exchange</h5>
            <p id="scrollbox" class="card-text">A full featured auction style website for goods or services with user authentication and security. Built on NodeJS with Express as the back-end framework with full CRUD functionality using MySQL.  Deployed via Heroku. </p>
            </div>
            <div class="card-body">
            <a target="_blank" href="#" class="card-link" >GitHub (soon)</a>
            <a target="_blank" href="#" class="card-link">Website (soon)</a>
            </div>
        </div>
    </div>
    <!-- card3 -->
    <div class="col-lg-4 col-md-6 mb-3">
        <div class="card" style="width: 18rem;">
            <img src="images/Trapped_thumb.png" class="card-img-top" alt="...">
            <div class="card-body">
            <h5 class="card-title">Trapped!</h5>
            <p id="scrollbox" class="card-text">An escape room adventure console game written in C++. <br> You must solve the puzzle to find the skeleton key that unlocks the door to safety, but you must do so before the batteries in your flashlight are dead. Each time you move between rooms the charge diminishes, and once the batteries are dead, your character is plunged into darkness. Without a source of light, they will never be able to solve the puzzle to find their way out of the darkness.  </p>
            </div>
            <div class="card-body">
            <a target="_blank" href="https://github.com/sd-owens/EscapeRoom" class="card-link">GitHub</a>
            <!-- <a href="#" class="card-link">Another link</a> -->
            </div>
        </div>
    </div>
    <!-- card4 -->
    <div class="col-lg-4 col-md-6 mb-3">
        <div class="card" style="width: 18rem;">
            <img src="images/BreakOut_thumb.png" class="card-img-top" alt="...">
            <div class="card-body">
            <h5 class="card-title">Break Out!</h5>
            <p id="scrollbox" class="card-text">The classic arcade game Break Out recreated for personal play on modern computers. <br> Written with Java SE7 and the Swing GUI package.  Breakout was an arcade game developed and published by Atari, Inc., and released on May 13, 1976. ... In Breakout, a layer of bricks lines the top third of the screen and the goal is to destroy them all. A ball moves straight around the screen, bouncing off the top and two sides of the screen.</p>
            </div>
            <div class="card-body">
            <a target="_blank" href="https://github.com/sd-owens/Breakout" class="card-link">GitHub</a>
            <!-- <a href="#" class="card-link">Another link</a> -->
            </div>
        </div>
    </div>
    <!-- card5 -->
    <div class="col-lg-4 col-md-6 mb-3">
        <div class="card" style="width: 18rem;">
            <img src="images/WormGame_thumb.png" class="card-img-top" alt="...">
            <div class="card-body">
            <h5 class="card-title">Worms!</h5>
            <p id="scrollbox" class="card-text">
                A worm constantly moves around the board. The player controls the direction the "head" of the worm moves, and the worm must try to eat apples that randomly appear. Eating an apply causes the worm to grow in length. The game ends if the worm crashes into the edge of the board or into itself.</p>
            </div>
            <div class="card-body">
            <a target="_blank" href="https://github.com/sd-owens/Worms" class="card-link">GitHub</a>
            <!-- <a href="#" class="card-link">Another link</a> -->
            </div>
        </div>
    </div>
    <!-- card6 -->
    <div class="col-lg-4 col-md-6 mb-3">
        <div class="card" style="width: 18rem;">
            <img src="images/GameOfLife_thumb.png" class="card-img-top" alt="...">
            <div class="card-body">
            <h5 class="card-title">Conway's Game of Life</h5>
            <p id="scrollbox" class="card-text">
                John Conway's classic Game of Life implemented with Java SE7 and the Swing GUI package. <br> The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970. The game is a zero-player game, meaning that its evolution is determined by its initial state, requiring no further input. One interacts with the Game of Life by creating an initial configuration and observing how it evolves, or, for advanced players, by creating patterns with particular properties.</p>
            </div>
            <div class="card-body">
            <a target="_blank" href="https://github.com/sd-owens/GameOfLife" class="card-link">GitHub</a>
            <!-- <a href="#" class="card-link"></a> -->
            </div>
        </div>
    </div>
    <!-- card7 -->
    <div class="col-lg-4 col-md-6 mb-3">
        <div class="card" style="width: 18rem;">
            <img src="images/food_delivery.png" class="card-img-top" alt="...">
            <div class="card-body">
            <h5 class="card-title">Auto Food Delivery UX/UI</h5>
            <p id="scrollbox" class="card-text">
                Led a team of 5 in the design of the user experience and interfaces (UX/UI) for an automated food delivery application for time-constrained end-users.  Project spanned all four phases of the Interaction Design product lifecycle using the PRICPE design process.  High Fidelity prototypes were created on Apple iOS using the Figma Interface Design Tool. </p>
            </div>
            <div class="card-body">
            <a target="_blank" href="https://github.com/sd-owens/AutomatedFoodDelivery" class="card-link">GitHub</a>
            <a href="https://www.figma.com/proto/TKCe6TCrvYdKuwduOhXYCN/Food-Finder?node-id=34%3A10 5&scaling=scale-down" class="card-link">UI Mockup</a>
            </div>
        </div>
    </div>
    <!-- card8 -->
    <div class="col-lg-4 col-md-6 mb-3">
        <div class="card" style="width: 18rem;">
            <img src="images/low_level_io.png" class="card-img-top" alt="...">
            <div class="card-body">
            <h5 class="card-title">Low Level IO (MASM)</h5>
            <p id="scrollbox" class="card-text">
                Implemented low level input and output using Win32API macros in Microsoft Assembler language (MASM).  Demonstrates low level language custom macros in assembly language to read in user input from the console, store data in memory, perform data manipulation and provide console output to the user based on arithmetic calculations </p>
            </div>
            <div class="card-body">
            <a target="_blank" href="https://github.com/sd-owens/LowLevelWin32API" class="card-link">GitHub</a>
            <!-- <a href="#" class="card-link"></a> -->
            </div>
        </div>
    </div>
    <!-- card9 -->
    <div class="col-lg-4 col-md-6 mb-3">
        <div class="card" style="width: 18rem;">
            <img src="images/mergeSort_asm.png" class="card-img-top" alt="...">
            <div class="card-body">
            <h5 class="card-title">MergeSort Algorithm (MASM)</h5>
            <p id="scrollbox" class="card-text">
                Implemented mergeSort algorithm in Microsoft Assembler language (MASM).  Demonstrates recursive in-place sorting of an array of random integers (0-999) between 15 and 200 elements using only assembly language. </p>
            </div>
            <div class="card-body">
            <a target="_blank" href="https://github.com/sd-owens/MergeSort_MASM" class="card-link">GitHub</a>
            <!-- <a href="#" class="card-link"></a> -->
            </div>
        </div>
    </div>

</div>

<div class="row text-center">
    
    
</div>





<%- include('./partials/footer.ejs') %> 